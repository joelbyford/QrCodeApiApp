name: Deploy on Push to Main
# only run on push to main (merges)
on:
  push:
    branches: [ main ]

# This workflow/action uses the Azure CLI to publish the webapp to a staging slot
# then tests the app to ensure the app is functioning in that staging slot
# If successfull, the workflow continues on and does a slot-swap.

jobs:
  build:
    name: Build to Staging Slot
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Setup dotnet 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore package dependencies
      run: dotnet restore

    - name: dotet build
      run: dotnet build --no-restore --configuration Release
      
    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp --no-build
    
    - name: Azure WebApp Deploy
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: qrcode-api-app
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{secrets.AZUREWEBAPPPUBLISHPROFILE_STAGE}}
        # Enter an existing Slot other than the Production slot
        slot-name: staging
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        package: ${{env.DOTNET_ROOT}}/myapp
         
  test:
    name: Test Staging Slot
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2.2.1

      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
      - name: Test with pytest
        run: |
          cd QrCodeApiApp/test
          pytest --url ${{secrets.STAGING_URL}}
    
  swap-to-prod:
    name: Swap Staging to Prod
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false
          # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
          environment: azureusgovernment

      - name: Azure Publish to Staging
        uses: Azure/cli@1.0.4
        with:
          # Specify the script here
          inlineScript: az webapp deployment slot swap  --name ${{secrets.APP_NAME}} --resource-group ${{secrets.APP_RG}} --slot staging --target-slot production
          
          





